{"ast":null,"code":"var _jsxFileName = \"C:\\\\Codecademy\\\\flashcards-starting-code-react-v18\\\\src\\\\features\\\\cards\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCardById } from './cardsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  id\n}) {\n  _s();\n  // Retrieve the card details for the given cardId from state\n  const card = useSelector(state => selectCardById(state, cardId));\n  const [isFlipped, setIsFlipped] = useState(false);\n  if (!card) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Card not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => setIsFlipped(!isFlipped),\n    style: {\n      cursor: 'pointer',\n      border: '1px solid #ccc',\n      padding: '1rem',\n      marginBottom: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isFlipped ? card.back : card.front\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"sPn17S8sHVVBtc/7CH/YmCWKQzo=\", false, function () {\n  return [useSelector];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useSelector","selectCardById","jsxDEV","_jsxDEV","Card","id","_s","card","state","cardId","isFlipped","setIsFlipped","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","style","cursor","border","padding","marginBottom","back","front","_c","$RefreshReg$"],"sources":["C:/Codecademy/flashcards-starting-code-react-v18/src/features/cards/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCardById } from './cardsSlice';\n\nexport default function Card({ id }) {\n  // Retrieve the card details for the given cardId from state\n  const card = useSelector(state => selectCardById(state, cardId));\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  if (!card) {\n    return <div>Card not found.</div>;\n  }\n\n  return (\n    <div \n      className=\"card\" \n      onClick={() => setIsFlipped(!isFlipped)}\n      style={{ cursor: 'pointer', border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}\n    >\n      <p>{isFlipped ? card.back : card.front}</p>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EACnC;EACA,MAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIP,cAAc,CAACO,KAAK,EAAEC,MAAM,CAAC,CAAC;EAChE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,IAAI,CAACQ,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAS,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEb,OAAA;IACEc,SAAS,EAAC,MAAM;IAChBC,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAAC,CAACD,SAAS,CAAE;IACxCS,KAAK,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAX,QAAA,eAE9FT,OAAA;MAAAS,QAAA,EAAIF,SAAS,GAAGH,IAAI,CAACiB,IAAI,GAAGjB,IAAI,CAACkB;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACV,EAAA,CAlBuBF,IAAI;EAAA,QAEbJ,WAAW;AAAA;AAAA0B,EAAA,GAFFtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}