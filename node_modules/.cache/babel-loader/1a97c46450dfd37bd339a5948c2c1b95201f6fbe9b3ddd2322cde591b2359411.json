{"ast":null,"code":"var _jsxFileName = \"C:\\\\Codecademy\\\\flashcards-starting-code-react-v18\\\\src\\\\components\\\\NewQuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addQuiz } from '../features/quizzes/quizzesSlice';\nimport { selectTopics } from '../features/topics/topicsSlice';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Local state to hold the form values\n  const [quizName, setQuizName] = useState('');\n  // Set default topic to the first available topic if any exist\n  const defaultTopicId = Object.keys(topics)[0] || '';\n  const [topicId, setTopicId] = useState(defaultTopicId);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const id = uuidv4();\n    // Dispatch the addQuiz action with the new quiz data\n    dispatch(addQuiz({\n      id,\n      name: quizName,\n      topicId,\n      cardIds: []\n    }));\n    // After dispatching, redirect the user to the /quizzes page\n    navigate('/quizzes');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"new-quiz-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quizName\",\n        children: \"Quiz Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quizName\",\n        type: \"text\",\n        value: quizName,\n        onChange: e => setQuizName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"topic\",\n        children: \"Select Topic:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"topic\",\n        value: topicId,\n        onChange: e => setTopicId(e.target.value),\n        required: true,\n        children: Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuizForm, \"tYxLHKu1SzyCDQgGrlRvpo3Gflc=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = NewQuizForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","addQuiz","selectTopics","v4","uuidv4","jsxDEV","_jsxDEV","NewQuizForm","_s","topics","dispatch","navigate","quizName","setQuizName","defaultTopicId","Object","keys","topicId","setTopicId","handleSubmit","e","preventDefault","id","name","cardIds","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","required","values","map","topic","_c","$RefreshReg$"],"sources":["C:/Codecademy/flashcards-starting-code-react-v18/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addQuiz } from '../features/quizzes/quizzesSlice';\nimport { selectTopics } from '../features/topics/topicsSlice';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\n\n\nexport default function NewQuizForm() {\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Local state to hold the form values\n  const [quizName, setQuizName] = useState('');\n  // Set default topic to the first available topic if any exist\n  const defaultTopicId = Object.keys(topics)[0] || '';\n  const [topicId, setTopicId] = useState(defaultTopicId);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    // Dispatch the addQuiz action with the new quiz data\n    dispatch(addQuiz({ id, name: quizName, topicId, cardIds: [] }));\n    // After dispatching, redirect the user to the /quizzes page\n    navigate('/quizzes');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"new-quiz-form\">\n      <h2>Create a New Quiz</h2>\n      <div>\n        <label htmlFor=\"quizName\">Quiz Name:</label>\n        <input\n          id=\"quizName\"\n          type=\"text\"\n          value={quizName}\n          onChange={(e) => setQuizName(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"topic\">Select Topic:</label>\n        <select\n          id=\"topic\"\n          value={topicId}\n          onChange={(e) => setTopicId(e.target.value)}\n          required\n        >\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button type=\"submit\">Add Quiz</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}