{"ast":null,"code":"var _jsxFileName = \"C:\\\\Codecademy\\\\flashcards-starting-code-react-v18\\\\src\\\\features\\\\cards\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { selectCardById } from './cardsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  id\n}) {\n  _s();\n  // Retrieve the card details for the given cardId from state\n  const card = useSelector(state => selectCardById(state, id), shallowEqual);\n  const [isFlipped, setIsFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card\",\n      onClick: () => setIsFlipped(!isFlipped),\n      children: isFlipped ? card.back : card.front\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_s(Card, \"sPn17S8sHVVBtc/7CH/YmCWKQzo=\", false, function () {\n  return [useSelector];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","shallowEqual","useSelector","selectCardById","jsxDEV","_jsxDEV","Card","id","_s","card","state","isFlipped","setIsFlipped","children","className","onClick","back","front","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Codecademy/flashcards-starting-code-react-v18/src/features/cards/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { selectCardById } from './cardsSlice';\n\nexport default function Card({ id }) {\n  // Retrieve the card details for the given cardId from state\n  const card = useSelector(state => selectCardById(state, id), shallowEqual);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n\n  return (\n  <li>\n    <button className=\"card\" onClick={() => setIsFlipped(!isFlipped)}>\n      {isFlipped ? card.back : card.front}\n    </button>\n  </li>\n);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,WAAW,QAAQ,aAAa;AACvD,SAASC,cAAc,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EACnC;EACA,MAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIP,cAAc,CAACO,KAAK,EAAEH,EAAE,CAAC,EAAEN,YAAY,CAAC;EAC1E,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAGjD,oBACAK,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAQS,SAAS,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAE,QAAA,EAC9DF,SAAS,GAAGF,IAAI,CAACO,IAAI,GAAGP,IAAI,CAACQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEP;AAACb,EAAA,CAbuBF,IAAI;EAAA,QAEbJ,WAAW;AAAA;AAAAoB,EAAA,GAFFhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}